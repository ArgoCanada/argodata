% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argo-filter.R
\name{argo_filter_radius}
\alias{argo_filter_radius}
\alias{argo_filter_rect}
\alias{argo_filter_date}
\alias{argo_filter_updated}
\alias{argo_filter_float}
\alias{argo_filter_data_mode}
\alias{argo_filter_direction}
\title{Select rows of Argo tables}
\usage{
argo_filter_radius(tbl, latitude, longitude, radius_km)

argo_filter_rect(tbl, latitude_min, latitude_max, longitude_min, longitude_max)

argo_filter_date(tbl, date_min, date_max = Sys.time())

argo_filter_updated(tbl, date_update_min, date_update_max = Sys.time())

argo_filter_float(tbl, float)

argo_filter_data_mode(tbl, data_mode)

argo_filter_direction(tbl, direction)
}
\arguments{
\item{tbl}{A data.frame, ideally derived from \code{\link[=argo_global_meta]{argo_global_meta()}}
and family. The column conventions used by the global indexes is assumed
(e.g., columns \code{latitude} and \code{longitude} exist).}

\item{latitude, longitude}{A location.}

\item{radius_km}{A radius from the point described by \code{latitude} and
\code{longitude}.}

\item{latitude_max, latitude_min, longitude_max, longitude_min}{A rectangle
describing the desired bounds. A rectangle where \code{longitude_min} is greater
than \code{longitude_max} are interpreted as wrapping across the international
date line.}

\item{date_min, date_max, date_update_min, date_update_max}{A range of
datetimes. Users are responsible for setting the timezone for these
objects and are encouraged to used UTC.}

\item{float}{A float identifier.}

\item{data_mode}{One of "realtime" or "delayed".}

\item{direction}{One of "ascending" or "descending"}
}
\value{
\code{tbl} with rows that match the search criteria.
}
\description{
These functions are intended to be applied to \code{\link[=argo_global_meta]{argo_global_meta()}} and
other global index tables in the \verb{argo_global_*()} family.
}
\examples{
library(dplyr, warn.conflicts = FALSE)

\dontrun{
argo_global_prof() \%>\%
  # within 500 km of Halifax, Nova Scotia
  argo_filter_radius(45, -64, 500)
}

with_argo_example_cache({
  argo_global_traj() \%>\%
    argo_filter_rect(40, 60, -64, -54)
})

with_argo_example_cache({
  argo_global_traj() \%>\%
    argo_filter_updated("2020-01-01 00:00") \%>\%
    select(date_update, everything())
})

with_argo_example_cache({
  argo_global_traj() \%>\%
    argo_filter_float(c("13857", "15851"))
})

with_argo_example_cache({
  argo_global_traj() \%>\%
    argo_filter_data_mode("delayed")
})


}
