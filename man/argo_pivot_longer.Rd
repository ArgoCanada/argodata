% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argo-pivot.R
\name{argo_pivot_longer}
\alias{argo_pivot_longer}
\title{Transform Argo data to variable-long format}
\usage{
argo_pivot_longer(tbl, id_cols)
}
\arguments{
\item{tbl}{An Argo table with paired value/qc/adjusted columns, likely
from \code{\link[=argo_prof_levels]{argo_prof_levels()}} or \code{\link[=argo_traj_measurement]{argo_traj_measurement()}}.}

\item{id_cols}{A vector of column names used to identify each row in the
output using \code{\link[dplyr:select]{dplyr::select()}} syntax.}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} with columns \code{id_cols}, \code{variable}, \code{value},
\code{value_qc}, \code{value_adjusted}, \code{value_adjusted_qc}, and
\code{value_adjusted_error}.
}
\description{
Whereas the variable-wide format returned by most Argo read and load
functions are useful, some processing and plotting algorithms need data
in a variable-long form, where the variable name is assigned to a column
whose value is used to identify the measurement represented by each row.
}
\examples{
library(dplyr, warn.conflicts = FALSE)

with_argo_example_cache({
  argo_prof_levels("dac/csio/2902746/profiles/BR2902746_001.nc") \%>\%
    argo_pivot_longer(id_cols = c(file, date, pres))
})

}
