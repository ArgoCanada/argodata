% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argo-prof.R
\name{argo_read_prof_levels}
\alias{argo_read_prof_levels}
\alias{argo_read_prof_prof}
\alias{argo_read_prof_calib}
\alias{argo_read_prof_param}
\alias{argo_read_prof_history}
\alias{argo_read_prof_spectra}
\title{Read Argo profiles}
\usage{
argo_read_prof_levels(file, vars = NULL, quiet = FALSE)

argo_read_prof_prof(file, vars = NULL, quiet = FALSE)

argo_read_prof_calib(file, vars = NULL, quiet = FALSE)

argo_read_prof_param(file, vars = NULL, quiet = FALSE)

argo_read_prof_history(file, vars = NULL, quiet = FALSE)

argo_read_prof_spectra(file, vars = NULL, quiet = FALSE)
}
\arguments{
\item{file}{A previously downloaded Argo NetCDF file
(e.g., using \code{\link[=argo_download]{argo_download()}}).}

\item{vars}{A vector of variable names to include. Explicitly specifying
\code{vars} can lead to much faster read times when reading many files.}

\item{quiet}{Use \code{FALSE} to stop for malformed files, \code{NA} to
silently warn for malformed files, or \code{TRUE} to silently ignore
read errors when possible.}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} with
\itemize{
\item \code{argo_read_prof_levels()}: one row per profile per sampling level.
\item \code{argo_read_prof_prof()}: one row per profile.
\item \code{argo_read_prof_calib()}: one row per profile per calibration per parameter.
\item \code{argo_read_prof_param()}: one row per profile per parameter.
\item \code{argo_read_prof_history()}: one row per profile per history entry.
\item \code{argo_read_prof_spectra()}: one row per profile per sampling level per
spectra value.
}
}
\description{
Use \verb{argo_read_prof_*()} functions to extract profile information from a
previously-downloaded Argo NetCDF file.
}
\examples{
prof_file <- system.file(
  "cache-test/dac/csio/2900313/profiles/D2900313_000.nc",
  package = "argodata"
)

argo_read_prof_levels(prof_file)
argo_read_prof_prof(prof_file)
argo_read_prof_calib(prof_file)
argo_read_prof_param(prof_file)
argo_read_prof_history(prof_file)

bgc_file <- system.file(
  "cache-test/dac/aoml/5906206/profiles/BD5906206_016.nc",
  package = "argodata"
)
argo_read_prof_spectra(bgc_file)

}
