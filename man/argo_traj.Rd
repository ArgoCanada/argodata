% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argo-traj.R
\name{argo_traj_meas}
\alias{argo_traj_meas}
\alias{argo_traj_cycle}
\alias{argo_traj_history}
\alias{argo_read_traj_meas}
\alias{argo_read_traj_cycle}
\alias{argo_read_traj_history}
\title{Load Argo trajectories}
\usage{
argo_traj_meas(path, vars = NULL, download = NULL, quiet = FALSE)

argo_traj_cycle(path, vars = NULL, download = NULL, quiet = FALSE)

argo_traj_history(path, vars = NULL, download = NULL, quiet = FALSE)

argo_read_traj_meas(file, vars = NULL)

argo_read_traj_cycle(file, vars = NULL)

argo_read_traj_history(file, vars = NULL)
}
\arguments{
\item{path}{A path relative to the root directory of
\code{\link[=argo_mirror]{argo_mirror()}} or \code{\link[=argo_cache_dir]{argo_cache_dir()}}. This value can also
be a data.frame with a \code{file} column (e.g., a global index as
returned by \code{\link[=argo_global_meta]{argo_global_meta()}} and others).}

\item{vars}{A vector of variable names to include. The ordering
of the variables is not guaranteed, and variables that do not
exist are ignored. For \verb{nc_read_*()} and \verb{read_*()} variants,
these are the raw variable names (all caps, without "date"
substituted for "juld").}

\item{download}{A logical vector indicating whether or not
a file should be downloaded. Defaults to the value of
\code{\link[=argo_should_download]{argo_should_download()}}, which is \code{TRUE} for files that
do not exist in the cache.}

\item{quiet}{Use \code{FALSE} to show which files are downloaded and for more
verbose error messages.}

\item{file}{A previously downloaded Argo NetCDF file.}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}}.
}
\description{
Trajectory files contain (1) location measurements and (2)
detailed information about each cycle. Use \code{\link[=argo_traj_meas]{argo_traj_meas()}}
output containing one row per location measurement; use
\code{\link[=argo_traj_cycle]{argo_traj_cycle()}} for output containing one row per
cycle. Finally, use \code{\link[=argo_traj_history]{argo_traj_history()}} to view quality
control that has been applied.
}
\section{Measurement Variables}{

\itemize{
\item \code{date} (days since 1950-01-01 00:00:00 UTC, double): Julian day
(UTC) of each measurement relative to REFERENCE_DATE_TIME
\item \code{date_status} (char): Status of the date and time
\item \code{date_qc} (char): Quality on date and time
\item \code{date_adjusted} (days since 1950-01-01 00:00:00 UTC, double):
Adjusted julian day (UTC) of each measurement relative to
REFERENCE_DATE_TIME
\item \code{date_adjusted_status} (char): Status of the JULD_ADJUSTED date
\item \code{date_adjusted_qc} (char): Quality on adjusted date and time
\item \code{latitude} (degree_north, double): Latitude of each location
\item \code{longitude} (degree_east, double): Longitude of each location
\item \code{position_accuracy} (char): Estimated accuracy in latitude and
longitude
\item \code{position_qc} (char): Quality on position
\item \code{cycle_number} (int): Float cycle number of the measurement
\item \code{cycle_number_adjusted} (int): Adjusted float cycle number of the
measurement
\item \code{measurement_code} (int): Flag referring to a measurement event in
the cycle
\item \code{pres} (decibar, float): Sea water pressure, equals 0 at sea-level
\item \code{pres_qc} (char): quality flag
\item \code{pres_adjusted} (decibar, float): Sea water pressure, equals 0 at
sea-level
\item \code{pres_adjusted_qc} (char): quality flag
\item \code{pres_adjusted_error} (decibar, float): Contains the error on the
adjusted values as determined by the delayed mode QC process
\item \code{temp} (degree_Celsius, float): Sea temperature in-situ ITS-90 scale
\item \code{temp_qc} (char): quality flag
\item \code{temp_adjusted} (degree_Celsius, float): Sea temperature in-situ
ITS-90 scale
\item \code{temp_adjusted_qc} (char): quality flag
\item \code{temp_adjusted_error} (degree_Celsius, float): Contains the error on
the adjusted values as determined by the delayed mode QC process
\item \code{psal} (psu, float): Practical salinity
\item \code{psal_qc} (char): quality flag
\item \code{psal_adjusted} (psu, float): Practical salinity
\item \code{psal_adjusted_qc} (char): quality flag
\item \code{psal_adjusted_error} (psu, float): Contains the error on the
adjusted values as determined by the delayed mode QC process
\item \code{axes_error_ellipse_major} (meters, float): Major axis of error
ellipse from positioning system
\item \code{axes_error_ellipse_minor} (meters, float): Minor axis of error
ellipse from positioning system
\item \code{axes_error_ellipse_angle} (Degrees (from North when heading East),
float): Angle of error ellipse from positioning system
\item \code{satellite_name} (char): Satellite name from positioning system
}
}

\section{Cycle Variables}{

\itemize{
\item \code{date_descent_start} (days since 1950-01-01 00:00:00 UTC, double):
Descent start date of the cycle
\item \code{date_descent_start_status} (char): Status of descent start date of
the cycle
\item \code{date_first_stabilization} (days since 1950-01-01 00:00:00 UTC,
double): Time when a float first becomes water-neutral
\item \code{date_first_stabilization_status} (char): Status of time when a
float first becomes water-neutral
\item \code{date_descent_end} (days since 1950-01-01 00:00:00 UTC, double):
Descent end date of the cycle
\item \code{date_descent_end_status} (char): Status of descent end date of the
cycle
\item \code{date_park_start} (days since 1950-01-01 00:00:00 UTC, double):
Drift start date of the cycle
\item \code{date_park_start_status} (char): Status of drift start date of the
cycle
\item \code{date_park_end} (days since 1950-01-01 00:00:00 UTC, double): Drift
end date of the cycle
\item \code{date_park_end_status} (char): Status of drift end date of the cycle
\item \code{date_deep_descent_end} (days since 1950-01-01 00:00:00 UTC,
double): Deep descent end date of the cycle
\item \code{date_deep_descent_end_status} (char): Status of deep descent end
date of the cycle
\item \code{date_deep_park_start} (days since 1950-01-01 00:00:00 UTC, double):
Deep park start date of the cycle
\item \code{date_deep_park_start_status} (char): Status of deep park start date
of the cycle
\item \code{date_ascent_start} (days since 1950-01-01 00:00:00 UTC, double):
Start date of the ascent to the surface
\item \code{date_ascent_start_status} (char): Status of start date of the
ascent to the surface
\item \code{date_deep_ascent_start} (days since 1950-01-01 00:00:00 UTC,
double): Deep ascent start date of the cycle
\item \code{date_deep_ascent_start_status} (char): Status of deep ascent start
date of the cycle
\item \code{date_ascent_end} (days since 1950-01-01 00:00:00 UTC, double): End
date of ascent to the surface
\item \code{date_ascent_end_status} (char): Status of end date of ascent to the
surface
\item \code{date_transmission_start} (days since 1950-01-01 00:00:00 UTC,
double): Start date of transmission
\item \code{date_transmission_start_status} (char): Status of start date of
transmission
\item \code{date_first_message} (days since 1950-01-01 00:00:00 UTC, double):
Date of earliest float message received
\item \code{date_first_message_status} (char): Status of date of earliest float
message received
\item \code{date_first_location} (days since 1950-01-01 00:00:00 UTC, double):
Date of earliest location
\item \code{date_first_location_status} (char): Status of date of earliest
location
\item \code{date_last_location} (days since 1950-01-01 00:00:00 UTC, double):
Date of latest location
\item \code{date_last_location_status} (char): Status of date of latest
location
\item \code{date_last_message} (days since 1950-01-01 00:00:00 UTC, double):
Date of latest float message received
\item \code{date_last_message_status} (char): Status of date of latest float
message received
\item \code{date_transmission_end} (days since 1950-01-01 00:00:00 UTC,
double): Transmission end date
\item \code{date_transmission_end_status} (char): Status of transmission end
date
\item \code{clock_offset} (days, double): Time of float clock drift
\item \code{grounded} (days, char): Did the profiler touch the ground for that
cycle?
\item \code{representative_park_pressure} (decibar, float): Best pressure value
during park phase
\item \code{representative_park_pressure_status} (char): Status of best
pressure value during park phase
\item \code{config_mission_number} (int): Unique number denoting the missions
performed by the float
\item \code{cycle_number_index} (int): Cycle number that corresponds to the
current index
\item \code{cycle_number_index_adjusted} (int): Adjusted cycle number that
corresponds to the current index
\item \code{data_mode} (char): Delayed mode or real time data
}
}

\section{History Variables}{

\itemize{
\item \code{history_previous_value} (float): Parameter/Flag previous value
before action
\item \code{history_index_dimension} (char): Name of dimension to which
HISTORY_START_INDEX and HISTORY_STOP_INDEX correspond
\item \code{history_start_index} (int): Start index action applied on
\item \code{history_stop_index} (int): Stop index action applied on
\item \code{history_institution} (char): Institution which performed action
\item \code{history_step} (char): Step in data processing
\item \code{history_software} (char): Name of software which performed action
\item \code{history_software_release} (char): Version/release of software which
performed action
\item \code{history_reference} (char): Reference of database
\item \code{history_date} (char): Date the history record was created
\item \code{history_action} (char): Action performed on data
\item \code{history_parameter} (char): Station parameter action is performed on
\item \code{history_qctest} (char): Documentation of tests performed, tests
failed (in hex form)
}
}

\examples{
with_argo_example_cache({
  argo_traj_meas("dac/csio/2900313/2900313_Rtraj.nc")
})

with_argo_example_cache({
  argo_traj_cycle("dac/csio/2900313/2900313_Rtraj.nc")
})

with_argo_example_cache({
  argo_traj_history("dac/csio/2900313/2900313_Rtraj.nc")
})

traj_file <- system.file(
  "cache-test/dac/csio/2900313/2900313_Rtraj.nc",
  package = "argodata"
)

argo_read_traj_meas(traj_file)
argo_read_traj_cycle(traj_file)
argo_read_traj_history(traj_file)

}
