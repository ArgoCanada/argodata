% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/argo-adjusted.R
\name{argo_use_adjusted}
\alias{argo_use_adjusted}
\alias{argo_adjusted_cols}
\title{Prefer adjusted values}
\usage{
argo_use_adjusted(
  tbl,
  cols,
  adjusted_cols = argo_adjusted_cols(tbl, {     {         cols     } })
)

argo_adjusted_cols(tbl, cols)
}
\arguments{
\item{tbl}{tbl A data frame containing \verb{_adjusted} or \verb{_ADJUSTED} columns.}

\item{cols}{Columns in \code{tbl}, specified using \code{\link[dplyr:select]{dplyr::select()}} syntax.}

\item{adjusted_cols}{A paired vector of columns to \code{cols} containing the
adjusted value to prefer over the value in \code{cols}.}
}
\value{
A \code{\link[tibble:tibble]{tibble::tibble()}} with
}
\description{
Many Argo tables have \verb{_adjusted} columns that contain a more reliable value.
However, in many cases, these values are blank or not present. Use
\code{argo_use_adjusted()} to replace \code{NA} values in \code{cols} with the value in
the paired \verb{_adjusted} column. You can use this with
\code{\link[=argo_qc_censor_if_not]{argo_qc_censor_if_not()}} to set values in \code{cols} to \code{NA} based on the paired
\verb{_qc} column prior to preferring the adjusted value.
}
\examples{
library(dplyr, warn.conflicts = FALSE)

with_argo_example_cache({
  argo_prof_levels("dac/csio/2902746/profiles/BR2902746_001.nc") \%>\%
    argo_use_adjusted(doxy)
})

}
